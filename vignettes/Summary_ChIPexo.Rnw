%\VignetteEngine{knitr::knitr}
\documentclass{article}

<<<style-knitr, eval=TRUE, echo=FALSE, results="asis">>=
  BiocStyle::latex()
@ 

\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{float}
\usepackage{graphicx}


\begin{document}

\title{An analysis of quality control measures for Chip-exo}
\author{Rene Welch \\ Department of Statistics, University of Wisconsin-Madison \\ Madison, WI}
\date{October 2014}

\maketitle


\tableofcontents

\newpage

\section{Introduction}


The idea of this document is to summarize the different analysis made
to asses the quality of different ChIP-exo data sets. Several analysis
were performed to the ChIP exo data.


\section{Summary of the data sets}

Right now we have only analized data sets from the E. Coli genome. 

<<loaddepth,include=FALSE,echo=FALSE,eval=TRUE>>=
  library(knitr)
  library(reshape2)
  load("../data/depth.RData")
  exo.depth = melt(exo.depth)
  exo.depth = exo.depth[,c(2,1)]
  names(exo.depth) = c("Data set","Depth")
  exo.depth[,1]= sapply(exo.depth[,1],function(x)gsub("_042814","",x))
  pet.depth = melt(pet.depth)
  pet.depth = pet.depth[,c(2,1)]
  pet.depth[,1]= sapply(pet.depth[,1],function(x)gsub("_042814","",x))
  names(pet.depth) = c("Data set","Depth")
@ 

\begin{table}[H]
  \centering
<<include=TRUE,echo=FALSE,eval=TRUE,results="asis">>=
 kable(exo.depth,format = 'latex')
@ 
  \caption{Depth for ChIP-exo data sets}
\end{table}


\begin{table}[H]
  \centering
<<include=TRUE,echo=FALSE,eval=TRUE,results="asis">>=
  kable(pet.depth,format ='latex')
@ 
\caption{Depth for ChIP-seq PET data sets}
\end{table}

\section{PCR bottleneck coefficient}

The PCR bottleneck coefficients is defined as a measure of library
complexity, i.e. how skewed the distribution of read counts per
location is towards 1 read per location. It is defined as:

\begin{align} 
  \text{PBC} = \frac{N_1}{N_d}
\end{align}

where:

\begin{itemize}

\item $N_1$ is the number of genomic locations to which
  \textbf{exactly} one unique mapping read maps

\item $N_d$ is the number of genomic locations to which \textbf{at
    least} one unique mapping read maps, i.e. the number of
  non-redundant unique mapping reads

\end{itemize}

Since $N_1 \leq N_d$ then $0 \leq \text{PBC} \leq 1$. Finally ENCODE
recommends:

\begin{table}[H]
  \centering
  \begin{tabular}{c|c}
    \hline\hline
    PBC range & Bottleneck class \\
    \hline
    0 - 0.5  & Severe  \\
    0.5 - 0.8 & Moderate  \\
    0.8 - 0.9 & Mild        \\  
    0.9 - 1 & Non-existent  \\
    \hline
  \end{tabular}
  \caption{PBC classification \label{pbc_class}}
\end{table}

We grouped the data sets by the protocol it was used to generate
it. We considered three protocols: ChIP-exo, ChIP-seq PET and ChIP-seq
SET. We wanted to compare if there is an overall level across the same
protocols used. Thus, for each data set, we calculated it's PBC and
plotted all together by grouping them across protocols:

\begin{figure}[H]
  \centering
  \includegraphics[width =
  .4\textwidth]{../inst/figs/pbc/PBCboxplot.pdf}
  \caption{PCR bottleneck coefficient separated by
    protocol \label{pbcfig}}
\end{figure}

In figure \ref{pbcfig} we can see that PBC is higher for both ChIP-seq
protocols. Also, we can see that the range of ChIP-Seq SET PBC is
bigger than the other two.

\section{Cross-correlation}

A problem for ChIP-seq SET data sets is that the read fragment length
is unknown. Cross-correlation is a method that gives an estimation of
this quantity by the shift where the strand cross - correlation is
maximized. For a given shift length $\delta$, the strand
cross-correlation is defined as:

\begin{align}
  \rho(\delta) = \sum_{c\in C} \frac{N_c}{N} P\left[n_c^+(x + \delta
    /2), n_c^-(x - \delta / 2) \right]
  \label{cross-corr}
\end{align}

where:

\begin{itemize}
\item $N_c$ is the number of reads mapped to chromosome $c$ and $N$ is
  the sum of all the reads mapped to the genome
\item $P(\bf{x},\bf{y})$ is the Pearson's correlation between vectors
  $\bf{x}$ and $\bf{y}$
\item $n_c^S(x)$ is the tag count vector of chromosome $c$ and strand
  $S$, centered at position $x$
\end{itemize}

For this part of the analysis we calculated the cross - correlation curve using two different pipelines: \Rpackage{spp} and \Biocpkg{ChIPQC} and compared both curves visually.

<<load_cross_data,include=FALSE,echo=FALSE,eval=TRUE>>=
  library(ggplot2)
  datadir = "../data"
  load(file.path(datadir,"cross_corr.RData"))
@  

<<chipseqSET,include=FALSE,echo=FALSE,eval=TRUE>>=
  df = set_df_list[[3]]       
  ggplot(df,aes(shift,crossCorr,colour = method))+geom_line()+theme(legend.position = "bottom",aspect.ratio = 1/3,axis.title = element_text(size = rel(2.5)),axis.text = element_text(size = rel(2)),legend.text = element_text(size = rel(2)),legend.title = element_text(size = rel(2)))+ scale_color_brewer(palette ="Dark2")
  ggsave("setCC1.pdf",width = 12,height = 5)
@ 

<<chipseqPET,include=FALSE,echo=FALSE,eval=TRUE>>=
  df = pet_df_list[[5]]       
  ggplot(df,aes(shift,crossCorr,colour = method))+geom_line()+theme(legend.position = "bottom",aspect.ratio = 1/3,axis.title = element_text(size = rel(2.5)),axis.text = element_text(size = rel(2)),legend.text = element_text(size = rel(2)),legend.title = element_text(size = rel(2)))+ scale_color_brewer(palette ="Dark2")
  ggsave("setCC2.pdf",width = 12,height = 5)
@ 

\begin{figure}[H]
  \centering
  \includegraphics[width=.8\textwidth]{setCC1.pdf}
  \caption{Strand cross-correlation for a typical ChIP-seq SET data set}
  \label{fig:cc1}
\end{figure}

\begin{figure}[H]
  \centering
  \includegraphics[width=.8\textwidth]{setCC2.pdf}
  \caption{Strand cross-correlation for a typical ChIP-seq PET data set}
  \label{fig:cc2}
\end{figure}

In both figures \ref{fig:cc1} and \ref{fig:cc2} we can see typical cross correlation curves for both ChIP-seq SET and PET data sets. In this case, there are no phantom peaks or any weird effect in the curves. So, when estimating the fragment length using the shift where each curve is maximized we can see that the position doesn't variate a lot between methods (it may be a matter of some bp). Also, it's is worth noticing that the range of both curves is on a decimal scale. However, when we plot one of the ChIP-exo datasets, we can see that its curves are both in a centesimal scale:

<<chipseqEXO,include=FALSE,echo=FALSE,eval=TRUE>>=
  df = exo_df_list[[8]]       
  ggplot(df,aes(shift,crossCorr,colour = method))+geom_line()+theme(legend.position = "bottom",aspect.ratio = 1/3,axis.title = element_text(size = rel(2.5)),axis.text = element_text(size = rel(2)),legend.text = element_text(size = rel(2)),legend.title = element_text(size = rel(2)))+ scale_color_brewer(palette ="Dark2")
  ggsave("setCC3.pdf",width = 12,height = 5)
@ 

\begin{figure}[H]
  \centering
  \includegraphics[width=.8\textwidth]{setCC3.pdf}
  \caption{Strand cross-correlation for a typical ChIP-exo data set}
  \label{fig:cc3}
\end{figure}

That means that both strand are approximately uncorrelated. Thus, this method may not work to estimate the read fragment length for a ChIP-exo data set. Also, we can think that this low values may be an effect of having sparse tag count vectors (which may be happening because of the enzyme diggesting all positions from the 5' end until reaching the TF.


\section{Forward strand ratio density}

For this analysis, we divided the e.coli genome into bins of a fixed length $b$ and for each bin we counted the number of reads that overlap with it. Finally we calculated the forward strand ratio as:

\begin{align}
  \text{ratio} = \frac{f+1}{f+r+2} 
\label{fwdratio}
\end{align}

where $f$ ($r$) is the number of reads in the forward (backward) strand that overlap with the bin. Ideally, we want to observe a uni-model density with small values around the extremes ($0$ and $1$). A typical ChIP-seq density looks like:

<<loadensities,include=FALSE,echo=FALSE,eval=TRUE>>=
load(file.path(datadir,"densities.RData")) # exo_density, pet_density,set_density
load(file.path(datadir,"sample.summary.RData")) # sample.info
source("../R/density_functions.R")
row= subset(sample.info,eval(parse(text=resume.samples(edsn=1319))))
rows = subset(sample.info,(eval(parse(text = resume.samples(ip=row$ip,rif=row$rif)))))
rm(row)
idd = do.call(c,lapply(rows$edsn,function(x)grep(x,names(exo_density))))
rm(rows)
@ 

<<include=FALSE,echo=FALSE,eval=TRUE>>=
  df = do.call(rbind, lapply(exo_density[idd],as.data.frame))
  idd
  ggplot(df,aes(x.x,x.y,colour = bin))+geom_line()+theme(legend.position = "bottom",aspect.ratio = 1,axis.title = element_text(size = rel(2.5)),axis.text = element_text(size = rel(2),angle=90),legend.text = element_text(size = rel(2)),legend.title = element_text(size = rel(2)))+ scale_color_brewer(palette ="Dark2")+facet_grid(.~edsn)+scale_x_continuous(limits = c(0,1))+xlab("fwd. strand ratio")+ylab("density")
  ggsave("exoDens.pdf",width = 6,height = 6)
  rm(idd)
@ 


\begin{figure}[H]
  \centering
    \includegraphics[width=.5\textwidth]{exoDens.pdf}
  \caption{Densities of forward strand ratio, the ip is $\beta$ and the condition is rif-20 min (both replicates)}
  \label{dens_exo} 
\end{figure}



Clealy for both ChIP-seq cases the densities are well behaved. Almost
all mass from the densities is concentrated around $0.5$. However, for
the ChIP-exo case the tails seem to be heavier, which means that there
are a lot of bins for which reads of only one strand are being
mapped. We are assuming that this is due to some sort of diggestion
bias.

In figure \ref{dens_exo}, we can see two replicates of the same data
set (ip=$\beta$ and rif=20 min), where the forward strand density
behaves in two different ways, which suggests that this bias is sample
dependent.

<<chipseq_dens,include=FALSE,echo=FALSE,eval=TRUE>>=
row= subset(sample.info,eval(parse(text=resume.samples(edsn=1400))))
idd = do.call(c,lapply(row$edsn,function(x)grep(x,names(pet_density))))
@ 

For comparison purposes, a common case of a ChIP-seq forward strand
density is shown (the same effect is observed in the rest of the
samples):

<<include=FALSE,echo=FALSE,eval=TRUE>>=
  df1 = do.call(rbind,lapply(pet_density[idd],as.data.frame))
  df1$seq = "PET"
  df2 = do.call(rbind,lapply(set_density[idd],as.data.frame))
  df2$seq = "SET"
  df = rbind(df1,df2)
  df$seq = factor(df$seq)
  ggplot(df,aes(x.x,x.y,colour = bin))+geom_line()+theme(legend.position = "bottom",aspect.ratio = 1,axis.title = element_text(size = rel(2.5)),axis.text = element_text(size = rel(2),angle=90),legend.text = element_text(size = rel(2)),legend.title = element_text(size = rel(2)))+ scale_color_brewer(palette ="Dark2")+facet_grid(edsn~seq)+scale_x_continuous(limits = c(0,1))+xlab("fwd. strand ratio")+ylab("density")
  ggsave("seqDens.pdf",width = 6,height = 6)  
@ 


\begin{figure}[H]
  \centering
  \includegraphics[width=.5\textwidth]{seqDens.pdf}
  \caption{Forward strand ratio for $\sigma_{70}$ with rif=0 min (both ChIP-seq case)}
  \label{dens_seq}
\end{figure}

In figure \ref{dens_seq} we can see that there is more probability mass around $0.5$ for the PET sample than for the SET sample. 


\subsection{Forward strand ratio density estimation conditional to higher count bins}

After comparing figures \ref{dens_exo} versus \ref{dens_seq}, it is
clear that the tails from the \ref{dens_exo} are more heavier than the
tails of any ChIP-seq case.

Usually, we are more interested in the densities with the highest
counts, since those are the regions where some signal could be
detected. Thus, we estimated the densities considering only the bins
with counts greater than certain quantile.

In \ref{dens_seq} we saw that the forward strand ratio's density is unimodal around $\text{ratio}=1/2$, thus we are going to plot only some examples for the ChIP-exo case.

<<include=FALSE,echo=FALSE,eval=TRUE>>=
load(file = "../data/cond_densities.RData")
fix_set <- function(cond_densities)
{
  cond_density = do.call(rbind,cond_densities)
  cond_density$edsn = factor(cond_density$edsn)
  cond_density$bin  = factor(cond_density$bin )
  cond_density$prob = factor(cond_density$prob)
  return(cond_density)
}
exo_cond_densities = lapply(exo_cond_densities,as.data.frame)
exo_cond_density = fix_set(exo_cond_densities)
@ 


<<include=FALSE,echo=FALSE,eval=TRUE>>=
  df = subset(exo_cond_density,edsn == "edsn1310")
  ggplot(df,aes(x.x,x.y,colour = prob))+geom_line()+theme(legend.position = "bottom",aspect.ratio = 1,axis.title = element_text(size = rel(2.5)),axis.text = element_text(size = rel(2),angle=90),legend.text = element_text(size = rel(2)),legend.title = element_text(size = rel(2)))+ scale_color_brewer(palette ="Dark2")+facet_grid(edsn ~ bin)+scale_x_continuous(limits = c(0,1))+xlab("fwd. strand ratio")+ylab("density") 
  ggsave("exo1310.pdf",width = 12,height = 6)  
@ 


\begin{figure}[H]
  \centering
  \includegraphics[width=.6\textwidth]{exo1310.pdf}
  \caption{Conditional densities, separated by quantile of ChIP-exo sample of ip=$\beta$ and rif =0 min}
\label{exo1310}
\end{figure}

<<include=FALSE,echo=FALSE,eval=TRUE>>=
  df = subset(exo_cond_density,edsn == "edsn1319")
  ggplot(df,aes(x.x,x.y,colour = prob))+geom_line()+theme(legend.position = "bottom",aspect.ratio = 1,axis.title = element_text(size = rel(2.5)),axis.text = element_text(size = rel(2),angle=90),legend.text = element_text(size = rel(2)),legend.title = element_text(size = rel(2)))+ scale_color_brewer(palette ="Dark2")+facet_grid(edsn ~ bin)+scale_x_continuous(limits = c(0,1))+xlab("fwd. strand ratio")+ylab("density") 
  ggsave("exo1319.pdf",width = 12,height = 6)  
@ 


\begin{figure}[H]
  \centering
  \includegraphics[width=.6\textwidth]{exo1319.pdf}
  \caption{Conditional densities, separated by quantile of ChIP-exo sample of ip=$\beta$ and rif =20 min}
\label{exo1319}
\end{figure}

In both figure \ref{exo1310} and \ref{exo1319}, we are plotting two different ChIP-exo samples. Different colors denote different percentiles, for which we are considering the bins with such that it's total counts are greater than the labeled percentile. In \ref{exo1310} we can see an improvement as the percentile increases, the density becomes more unimodal. However, as seen in \ref{exo1319}, there could be cases where the selected percentiles aren't enough.

\section{Examples}


\appendix

\section{Sampling SET reads from PET reads}



\end{document}
